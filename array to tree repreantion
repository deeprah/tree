#include <bits/stdc++.h>
using namespace std;
class Node{
    public:
    int val;
    Node* left;
    Node* right;
    Node(int val)
    {
        this->val=val;
        this->right=NULL;
        this->left=NULL;
    }
};
Node* construct(int arr[],int n)
{
    queue<Node*>q;
    Node*root=new Node(arr[0]);
    q.push(root);
   
    int i=1;
    int j=2;
    while(i<n &&q.size()>0)
    {
        Node* temp=q.front();
        q.pop();
         Node* l;
    Node* r;
        if(arr[i]!=INT_MIN) l=new Node(arr[i]);
        else l=NULL;
        if(arr[j]!=INT_MIN && j!=n) r=new Node(arr[j]);
        else r=NULL;
        temp->left=l;
        temp->right=r;
        if(l!=NULL) q.push(l);
        if(r!=NULL) q.push(r);
        i+=2;
        j+=2;
    }
    return root;
    
}
void lorder(Node* root)
{
    if(root==NULL) return;
    cout<<root->val<<" ";
    lorder(root->left);
    lorder(root->right);
}
int main()
{
    int arr[]={1,2,3,4,5,INT_MIN,6,INT_MIN,INT_MIN,7,8,9,INT_MIN};
    int n=sizeof(arr)/sizeof(arr[0]);
    Node*a=construct(arr,n);
    lorder(a);
    return 0;
}
    
